[{"categoryString":"EXTENSION","dateBuilt":"2025-06-02T11:13:42+0200","nonVisible":"true","iconName":"aiwebres/icon.png","methods":[{"deprecated":"false","name":"Initialize","description":"Initializes the extension with color themes, fonts, and translations. Each parameter must be a valid JSON string or a .json file name from the assets.","params":[{"helper":{"data":{"filter":[".json"]},"type":"ASSET"},"name":"colorThemes","type":"text"},{"helper":{"data":{"filter":[".json"]},"type":"ASSET"},"name":"fonts","type":"text"},{"helper":{"data":{"filter":[".json"]},"type":"ASSET"},"name":"translations","type":"text"}]},{"deprecated":"false","name":"ApplyFormatting","description":"Applies formatting to a specific layout.\n\nParameters:\n - layout (component): The arrangement to apply formatting to.\n\nHow it works:\nThis block scans all text views within the provided layout. It looks for texts starting with '[' and ending with ']', containing three comma-separated values (e.g., [1,2,3]my text or [name,regular,label]).\nThese entries are then formatted using the active language and theme mode.","params":[{"name":"layout","type":"component"}]},{"deprecated":"false","name":"ApplyCustomizedFormatting","description":"Applies formatting to a specific layout.\n\nParameters:\n - layout (component): The arrangement to apply formatting to.\n - themeMode (String): Specifies the theme mode for the color. Must be one of the predefined values from Modes\n - languageCode (String): Specifies the translation language. Must be one of the predefined values from SupportedLanguages\nHow it works:\nThis block scans all text views within the provided layout. It looks for texts starting with '[' and ending with ']', containing three comma-separated values (e.g., [1,2,3]my text or [name,regular,label]).\nThese entries are then formatted using the themeMode and languageCode.","params":[{"name":"layout","type":"component"},{"name":"themeMode","type":"text"},{"name":"languageCode","type":"text"}]},{"deprecated":"false","name":"Get","description":"Accesses keys or values from the preloaded dataset","params":[{"helper":{"data":{"defaultOpt":"PrimitiveKeys","underlyingType":"java.lang.String","options":[{"deprecated":"false","name":"PrimitiveKeys","description":"Option for PrimitiveKeys","value":"PrimitiveKeys"},{"deprecated":"false","name":"SemanticKeys","description":"Option for SemanticKeys","value":"SemanticKeys"},{"deprecated":"false","name":"ThemeModes","description":"Option for ThemeModes","value":"ThemeModes"},{"deprecated":"false","name":"FontKeys","description":"Option for FontKeys","value":"FontKeys"},{"deprecated":"false","name":"TranslationKeys","description":"Option for TranslationKeys","value":"TranslationKeys"},{"deprecated":"false","name":"SupportedLanguages","description":"Option for SupportedLanguages","value":"SupportedLanguages"}],"className":"com.hridoy.thmlt.helpers.All","tag":"All","key":"All"},"type":"OPTION_LIST"},"name":"data","type":"text"}],"returnType":"list"},{"deprecated":"false","name":"GetTranslation","description":"Retrieves the value for the given translationKey in the active translation language\n\nParameters:\n - translationKey (String): The identifier for a specific translation entry\n\nReturns:\n - If a translation for the given translationKey is not found, returns 'Not Found'.","params":[{"name":"translationKey","type":"text"}],"returnType":"text"},{"deprecated":"false","name":"GetTranslationForLanguage","description":"Retrieves the value for the specified translationKey in the given language code.\n\nParameters:\n - translationKey (String): The identifier for a specific translation entry\n\n - languageCode (String): Specifies the translation language. Must be one of the predefined values from SupportedLanguages\nReturns:\n - If a translation for the given translationKey is not found, returns 'Not Found'.\n - If the provided languageCode is not in SupportedLanguages, returns 'languageCode is not supported'.","params":[{"name":"translationKey","type":"text"},{"name":"languageCode","type":"text"}],"returnType":"text"},{"deprecated":"false","name":"GetFont","description":"Returns the font associated with the given tag. If the tag is not found, logs an error and returns a default message.","params":[{"name":"fontName","type":"text"}],"returnType":"text"},{"deprecated":"false","name":"GetPrimitiveColor","description":"This method retrieves the integer value of a primitive color for a given key from the Primitive Colors.\n\nParameters:\n\n - key (String): The identifier for the desired primitive color.\nReturns:\n\n - The resolved integer color value if the key exists in the Primitive Colors.\n - '-1' if the key does not exist, indicating an error.","params":[{"name":"key","type":"text"}],"returnType":"number"},{"deprecated":"false","name":"GetSemanticColorSource","description":"This method retrieves the source reference of a semantic color as a String for a given key in the currently active theme mode.\n\nParameters:\n\n - key (String): The identifier for the desired semantic color.\nReturns:\n\n - A String containing the source reference of the semantic color if found.\n - A descriptive error message if the active theme mode or the key does not exist.","params":[{"name":"key","type":"text"}],"returnType":"text"},{"deprecated":"false","name":"GetSemanticColor","description":"This method retrieves the resolved integer value of a semantic color from primitive colors for a given key in the currently active theme mode.\n\nParameters:\n\n - key (String): The name or identifier of the semantic color to retrieve from primitive colors .\nReturns:\n\n - The resolved color value as an int if the key exists in the active theme mode.\n - '-1' if:\n        - The active theme mode does not exist in the Semantic Colors.\n        - The specified Semantic Color does not exist in the Theme Mode.","params":[{"name":"key","type":"text"}],"returnType":"number"},{"deprecated":"false","name":"GetSemanticColorByThemeMode","description":"This method retrieves the resolved integer value of a semantic color from primitive colors for a given key and theme mode.\n\nParameters:\n\n - key (String): The name or identifier of the semantic color to retrieve from primitive colors.\n - themeMode (String): Specifies the theme mode for the color. Must be one of the predefined values from Modes\nReturns:\n\n - The resolved color value as an int if the key exists in the active theme mode.\n - '-1' if:\n        - The theme mode does not exist in the Semantic Colors.\n        - The specified Semantic Color does not exist in the Theme Mode.","params":[{"name":"key","type":"text"},{"name":"themeMode","type":"text"}],"returnType":"number"}],"blockProperties":[{"rw":"read-write","deprecated":"false","name":"FontRegular","description":"The regular font style","type":"text","category":"Unspecified"},{"rw":"read-write","deprecated":"false","name":"FontBold","description":"The bold font style","type":"text","category":"Unspecified"},{"rw":"read-write","deprecated":"false","name":"FontMaterial","description":"The material font style","type":"text","category":"Unspecified"},{"rw":"read-write","deprecated":"false","name":"ColorPrimary","description":"The primary color","type":"number","category":"Unspecified"},{"rw":"read-write","deprecated":"false","name":"ColorSecondary","description":"The secondary color","type":"number","category":"Unspecified"},{"rw":"read-write","deprecated":"false","name":"ColorAccent","description":"The accent color","type":"number","category":"Unspecified"},{"rw":"read-write","deprecated":"false","name":"Language","description":"Returns the language code of the translation","type":"text","category":"Unspecified"},{"rw":"read-write","deprecated":"false","name":"ThemeMode","description":"Returns the active theme mode (e.g., light or dark)","type":"text","category":"Unspecified"}],"helpUrl":"","licenseName":"","type":"com.hridoy.thmlt.ThMLT","versionName":"3","androidMinSdk":"7","version":"60","external":"true","showOnPalette":"true","name":"ThMLT","helpString":"Extension component for ThMLT. Created using FAST CLI.","properties":[],"events":[{"deprecated":"false","name":"ErrorOccurred","description":"Occurs when an error happens","params":[{"name":"errorFrom","type":"text"},{"name":"error","type":"text"}]}]}]